<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:amq="http://activemq.apache.org/schema/core" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jms="http://www.springframework.org/schema/jms" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd                http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd                http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.2.0.xsd   http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

  
  <amq:broker persistent="true" useJmx="true">
  	<amq:persistenceAdapter>
      <amq:amqPersistenceAdapter directory="${activemq.persistence.dir}" maxFileLength="${activemq.persistence.size}"/>
    </amq:persistenceAdapter>
    <amq:transportConnectors>
      <amq:transportConnector uri="tcp://localhost:61616"/>
    </amq:transportConnectors>
  </amq:broker>
  
  

  <!-- JMS ConnectionFactory to use for ActiveMQ, configuring the embedded broker using XML -->
  <amq:connectionFactory brokerURL="vm://localhost" id="jmsFactory"/>
  
  

  <!-- JMS ConnectionFactory to use for Spring JMS template -->
  <bean class="org.springframework.jms.connection.CachingConnectionFactory" id="cachingConnectionFactory">
    <constructor-arg ref="jmsFactory"/>
    <property name="sessionCacheSize" value="${activemq.session.cache.size}"/>
  </bean>

  <!-- Spring JMS Template -->
  <bean class="org.springframework.jms.core.JmsTemplate" id="jmsTemplate">
    <!-- lets wrap in a pool to avoid creating a connection per send -->
    <property name="connectionFactory" ref="cachingConnectionFactory"/>
  	<property name="defaultDestination" ref="myDestination"/>
  </bean>
	<amq:queue id="myDestination" physicalName="myDestination"/>
    <jms:listener-container concurrency="10" connection-factory="jmsFactory" destination-type="queue">
        <jms:listener destination="myDestination" method="onMessage" ref="myQueueListener"/>
    </jms:listener-container>
    <bean class="pl.studioit.puzzlecrm.jms.MyQueueListener" id="myQueueListener"/>
</beans>
